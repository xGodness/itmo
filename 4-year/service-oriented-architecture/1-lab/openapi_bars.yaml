openapi: 3.0.3
info:
  title: SOA Lab - bars service - OpenAPI 3.0
  description: |-
    **OpenAPI specification for '_Service oriented architecture_' course lab at ITMO university.**
  version: 1.0.0
servers:
- url: http://TBD/api/v3/bars

tags:
  - name: bars
    description: Additional operations

paths:
  /labworks/{labwork-id}/difficulty/increase/{steps-count}:
    patch:
      tags:
        - bars
      summary: Increase difficulty of the lab work
      description: Increase difficulty of the lab work with ID `labwork-id` by `steps-count` steps
      operationId: difficultyIncrease
      parameters:
        - name: labwork-id
          in: path
          required: true
          description: ID of the lab work
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 1
            example: 1337
            readOnly: true
            description: "Value is unique. Generated automatically."
        - name: steps-count
          in: path
          required: true
          description: By how many steps to increase the difficulty
          schema:
            type: integer
            format: int32
            nullable: false
            minimum: 1
            example: 2
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabWork"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "404":
          description: Lab work was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "414":
          description: URI is too long
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URITooLongException"
        "422":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "503":
          description: External service is unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableError"

  /disciplines/{discipline-name}/make-hardcore:
    post:
      tags:
        - bars
      summary: Add 10 most difficult lab works to the specified discipline
      description: Add 10 most difficult lab works to the specified discipline
      operationId: disciplineMakeHardcore
      parameters:
        - name: discipline-name
          in: path
          required: true
          description: Name of the discipline
          schema:
            type: string
            nullable: false
            minLength: 1
            example: "SOA"
      responses:
        "204":
          description: Successful operation
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "404":
          description: Discipline was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "414":
          description: URI is too long
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URITooLongException"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "503":
          description: External service is unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableError"

components:
  schemas:
    LabWork:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          minimum: 1
          example: 1337
          readOnly: true
          description: "Value is unique. Generated automatically."
        name:
          type: string
          nullable: false
          minLength: 1
          example: "SOA Lab 1"
        coordinates:
          allOf:
            - $ref: "#/components/schemas/Coordinates"
            - nullable: false
        creationDate:
          type: string
          format: date
          nullable: false
          example: "2002-09-11"
          readOnly: true
          description: "Generated automatically. Format: YYYY-MM-DD."
        minimalPoint:
          type: number
          format: double
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 12.23
        difficulty:
          allOf:
            - $ref: "#/components/schemas/Difficulty"
            - nullable: false
        discipline:
          allOf:
            - $ref: "#/components/schemas/Discipline"
            - nullable: false
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int64
          nullable: false
          minimum: -896
          example: -13
        y:
          type: integer
          format: int32
          nullable: false
          minimum: -528
          example: 32
    Difficulty:
      type: string
      enum:
        - very_easy
        - easy
        - hard
        - very_hard
        - hopeless
      example: hard
    Discipline:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: "SOA"
        selfStudyHours:
          type: integer
          format: int32
          nullable: false
          example: 256

    InvalidInputException:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "Cannot process input in {field_name}"
    NotFoundException:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "Object {object_name} was not found"
    URITooLongException:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "Request URI is too long"
    ValidationException:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "Value of {field_name} is invalid"
    InternalServerError:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "Something went wrong; internal server error"
    ServiceUnavailableError:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          nullable: false
          items:
            type: string
            nullable: false
            minLength: 1
            example: "External service is not available"